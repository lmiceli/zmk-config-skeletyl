#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// Modified keymap based on personal experience, with some improvements based on Miryoku layout.

#define COLDH   0
#define NAV     1
#define ARROW   2
#define PRGRM   3 // for now, instead of mouse
#define SYM     4
#define NUM     5
#define FUN     6
#define GAME    7

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hmp: homerow_mods_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // todo: many of these are most likely unused as I have no idea abt combos in zmk

        // Combos for media player.
        // I often switch songs while drawing, so I assign the
        // combos on left hand side.

        combo_med_next {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp C_NEXT>;
        };
        combo_med_prev {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp C_PREV>;
        };
        combo_med_pp {
            timeout-ms = <50>;
            key-positions = <1 4>;
            bindings = <&kp C_PP>;
        };
        combo_med_stop {
            timeout-ms = <50>;
            key-positions = <1 3>;
            bindings = <&kp C_STOP>;
        };
        combo_med_vol_up {
            timeout-ms = <50>;
            key-positions = <2 13>;
            bindings = <&kp C_VOL_UP>;
        };
        combo_med_vol_dn {
            timeout-ms = <50>;
            key-positions = <3 12>;
            bindings = <&kp C_VOL_DN>;
        };
        combo_med_mute {
            timeout-ms = <50>;
            key-positions = <12 14>;
            bindings = <&kp C_MUTE>;
        };

        // todox: most likely no use for this, maybe as inspiration for a while
//        // combo for toggling illust layer
//        combo_tg_illust {
//            timeout-ms = <50>;
//            key-positions = <21 22 23>;
//            bindings = <&tog ILLUST>;
//        };

        // Combo for toggling the Colemak layout
//        combo_tg_colemak {
//            timeout-ms = <50>;
//            key-positions = <6 7 8>;
//            bindings = <&tog COLDH>;
//        };

        // Combo for toggling minimal game layout
//        combo_tg_game {
//            timeout-ms = <50>;
//            key-positions = <7 8>;
//            bindings = <&tog GAME>;
//        };

        // Combo for bluetooth control
        // (i.e. switch among the devices).
        combo_bt_next {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&bt BT_NXT>;
        };
        combo_bt_prev {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&bt BT_PRV>;
        };
        combo_bt_clr {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&bt BT_CLR>;
        };
        combo_bt_out_tog {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&out OUT_TOG>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

       colemak_dh {
            bindings = <
    &hmp LGUI Q  &kp W       &kp F        &kp P           &kp B         /**/  &kp J        &kp L          &kp U        &kp Y       &hmp LGUI SQT
    &kp A        &hm LALT R  &hm LCTRL S  &hm LSHFT T     &kp G         /**/  &kp M        &hm LSHFT N    &hm LCTRL E  &hm LALT I  &kp O
    &kp Z        &kp X       &kp C        &kp D           &kp V         /**/  &kp K        &lt PRGRM H          &kp COMMA    &kp DOT     &kp FSLH
                             &lt NAV ESC  &lt ARROW BSPC  &lt PRGRM TAB /**/  &lt FUN DEL  &lt NUM SPACE  &lt SYM ENTER
            >;
        };

        nav_layer {
            bindings = <
    &none &mkp MB3         &mkp MB2    &mkp MB1          &kp LC(PLUS)  /**/ &kp LC(LA(LG(N1))) &kp LC(LA(LG(N2))) &kp LC(LA(LG(N3))) &kp LC(LA(LG(N4))) &kp LC(LA(LG(N5)))    &none &kp LG(LC(LEFT)) &kp LG(TAB) &kp LG(LC(RIGHT)) &kp LC(PG_UP) /**/ &none              &kp LG(LEFT)       &kp LG(RIGHT)      &kp C_VOL_DN       &kp C_VOL_UP
    &none &none            &none       &none             &kp LC(MINUS) /**/ &kp LS(LG(DEL))    &kp LS(LG(COMMA))  &kp LS(LG(DOT))    &kp C_PLAY         &kp C_MUTE
                           &none       &none             &kp LA(TAB)   /**/ &none              &kp SPACE          &kp LA(F4)
            >;
        };

        arrow_layer {
            bindings = <

    &kp LGUI     &mkp MB3    &mkp MB2    &mkp MB1    &none            /**/   &kp PG_UP     &kp HOME    &kp UP   &kp END   &kp PG_DN
    &kp LA(LEFT) &kp LALT    &kp LCTRL   &kp LSHFT   &kp LA(RIGHT)    /**/   &kp LC(PG_UP) &kp LEFT    &kp DOWN &kp RIGHT &kp LC(PG_DN)
    &kp LC(Z)    &kp LC(X)   &kp LC(C)   &kp LC(V)   &none            /**/   &kp CAPS      &kp F11     &kp F7   &kp F8    &kp F9
                             &kp LA(TAB) &none       &none            /**/   &kp PG_UP     &kp LA(TAB) &kp PG_UP
// todo:                          replace all LA(TAB) with -> ALT_TAB, maybe find better use for some of the keys

            >;
        };


// i think this will eventually be mouse and bluetooth
// todo: for now only mouse clicks are possible so I leave here the older qmk with wheel and cursor movement as reminder
// on left will add 3 bt profiles, the selection in the top row and the clearing in bottom
// BT_CLR clear deletes pairing with currently selected profile, &bt BT_CLR_ALL for all
       prgrm_layer {
           bindings = <
    &sys_reset  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none         /**/ &none     &none    &none     &none   &none
//  KC_NO,      KC_WH_U,     ALT_TAB,     KC_WH_D,     KC_NO,        /**/ KC_NO,    KC_WH_U, KC_MS_U,  KC_WH_D,KC_NO,
    &kp LGUI    &kp LALT     &kp LCTRL    &kp LSHFT    &none         /**/ &none     &none    &none     &none   &none
//  KC_NO,       KC_LALT,    KC_LCTL,     KC_LSFT,     KC_NO,        /**/ KC_NO,    KC_MS_L, KC_MS_D,  KC_MS_R,KC_NO,
    &bootloader &none        &none        &bt BT_CLR   &bt BT_CLR_ALL/**/ &none     &none    &none     &none   &none
//  QK_BOOT,    KC_NO,       KC_NO,       KC_NO,       KC_NO,        /**/ KC_NO,    KC_WH_L, KC_BTN1,  KC_WH_R,KC_NO,
                             &trans       &mkp MB1     &trans        /**/ &mkp MB3  &mkp MB1 &mkp MB2
//                           KC_TRNS,     KC_BTN1,     KC_TRNS,           KC_BTN3,  KC_BTN1, KC_BTN2
            >;
        };

        sym_layer {
            bindings = <

    &kp LBRC  &kp AMPS &kp ASTRK   &kp LPAR       &kp RBRC /**/    &none  &none      &none       &none       &kp LGUI
    &kp COLON &kp DLLR &kp PERCENT &kp CARET      &kp PLUS /**/    &none  &kp LSHFT  &kp LCTRL   &kp LALT    &mkp MB1
    &kp TILDE &kp EXCL &kp AT      &kp HASH       &kp PIPE /**/    &none  &mkp MB1   &none       &none       &none
                       &kp RPAR    &kp UNDERSCORE &none    /**/    &none  &none      &none
            >;
        };

        num_layer {
            bindings = <
    &kp LBKT      &kp N7 &kp N8 &kp N9 &kp RBKT      /**/    &none  &none      &none       &none       &kp LGUI
    &kp SEMICOLON &kp N4 &kp N5 &kp N6 &kp EQUAL     /**/    &none  &kp LSHFT  &kp LCTRL   &kp LALT    &mkp MB1
    &kp GRAVE     &kp N1 &kp N2 &kp N3 &kp BACKSLASH /**/    &none  &mkp MB1   &none       &none       &none
                         &kp N0 &kp MINUS  &none     /**/    &none  &none      &none
            >;
        };

        fun_layer {
            bindings = <
    &kp F12 &kp F7  &kp F8      &kp F9      &kp PSCRN       /**/ &bt BT_CLR_ALL &none       &none       &none       &sys_reset
    &kp F11 &kp F4  &kp F5      &kp F6      &kp SLCK        /**/ &none          &kp LSHFT   &kp LCTRL   &kp LALT    &kp LGUI
    &kp F10 &kp F1  &kp F2      &kp F3      &kp PAUSE_BREAK /**/ &none          &none       &none       &none       &bootloader
                    &kp ESC     &kp BSPC    &kp TAB         /**/ &kp DEL        &kp SPACE   &kp ENTER
            >;
        };

// not used atm
        game_layer {
            bindings = <
    &kp F12 &kp Q  &kp W  &kp E  &kp R              &kp LGUI   &kp U   &kp I   &kp O   &kp LCTRL
    &kp F1 &kp A  &kp S  &kp D  &kp F              &kp LALT   &kp J   &kp K   &kp L   &kp LSHFT
    &none &kp Z  &kp X  &kp C  &kp V                 &none   &kp LEFT   &kp UP   &kp DOWN   &kp RIGHT
                    &kp DEL &kp SPACE &kp TAB   &kp BSPC   &kp RET   &kp ESC
            >;
        };

    };
};